name: Android Pull Request CI

on:
  workflow_dispatch: # To trigger manual build
  pull_request:
    branches:
      - main

# This is what will cancel the workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest
    outputs:
      APP_PATH: ${{ steps.bs-apk-upload.outputs.APP_PATH }}
      APP_VERSION: ${{ steps.get-app-version.outputs.APP_VERSION }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew assembleRelease --no-daemon
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Upload APK to BrowserStack
        id: bs-apk-upload
        env:
          BROWSERSTACK_USERNAME: '${{ secrets.BROWSERSTACK_USERNAME }}'
          BROWSERSTACK_ACCESS_KEY: '${{ secrets.BROWSERSTACK_ACCESS_KEY }}'
        run: |
          BS_PATH=$(curl -s -u "$BROWSERSTACK_USERNAME:$BROWSERSTACK_ACCESS_KEY" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@app/build/outputs/apk/release/app-release-unsigned.apk" | jq .app_url)
          echo "APP_PATH=$BS_PATH" >> $GITHUB_OUTPUT
      - name: Get app version
        id: get-app-version
        run: |
          echo "APP_VERSION=$(./gradlew -q printVersionName)" >> $GITHUB_OUTPUT
      - name: Publish Apk
        uses: actions/upload-artifact@master
        with:
          name: Notes.apk
          path: app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 1
  test-preparation:
    name: Test Preparation
    runs-on: ubuntu-latest
    needs: build
    outputs:
      APP_PATH: ${{ needs.build.outputs.APP_PATH }}
      APP_VERSION: ${{ needs.build.outputs.APP_VERSION }}
      TEST_IMAGE_VERSION: ${{ steps.test-image-version.outputs.TEST_IMAGE_VERSION }}
    steps:
      - name: Get test Docker image
        id: test-image-version
        env:
          APP_VERSION: ${{ needs.build.outputs.APP_VERSION }}
        run: curl --head --silent --fail --output /dev/null "https://hub.docker.com/v2/namespaces/caballerojavier13/repositories/automation-java-appium-notes/tags/$APP_VERSION" && echo "TEST_IMAGE_VERSION=$APP_VERSION" >> $GITHUB_OUTPUT ||  echo "TEST_IMAGE_VERSION=latest" >> $GITHUB_OUTPUT;
  test:
    name: Run Tests - Browserstack
    runs-on: ubuntu-latest
    needs: test-preparation
    outputs:
      APP_VERSION: ${{ needs.test-preparation.outputs.APP_VERSION }}
    container:
      image: caballerojavier13/automation-java-appium-notes:${{ needs.test-preparation.outputs.TEST_IMAGE_VERSION }}
      env:
        APP_VERSION: ${{ needs.test-preparation.outputs.APP_VERSION }}
        APP_PATH: ${{ needs.test-preparation.outputs.APP_PATH }}
        RUN_ON_BROWSERSTACK: 'TRUE'
        DEVICE_NAME: 'Google Pixel 7'
        PLATFORM_VERSION: '13.0'
        BROWSERSTACK_USERNAME: '${{ secrets.BROWSERSTACK_USERNAME }}'
        BROWSERSTACK_ACCESS_KEY: '${{ secrets.BROWSERSTACK_ACCESS_KEY }}'
        BROWSERSTACK_BUILD_NAME: '${{ needs.test-preparation.outputs.APP_VERSION }}'
        BROWSERSTACK_PROJECT_NAME: 'Notes App GitHub Actions'
      volumes:
        - /project/build:/test-build
    steps:
      - name: Test execution
        run: |
          cd /project
          gradle test --no-daemon
      - name: Upload report
        uses: actions/upload-artifact@master
        with:
          name: test-build
          path: /project/build/test-results
  report:
    name: Process Report
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Restore cached report
        uses: actions/download-artifact@master
        with:
          name: test-build
          path: ./test-results
      - name: Publish Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Tests            # Name of the check run which will be created
          path: ./test-results/test/TEST-*.xml    # Path to test results
          reporter: java-junit        # Format of test results
